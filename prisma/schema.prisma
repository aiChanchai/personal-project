// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  habits    Habit[]
}

enum Role {
  USER
  ADMIN
}

model Category {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  habits    Habit[]
}

model Habit {
  id          Int          @id @default(autoincrement())
  title       String
  user        User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int?
  category    Category?    @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  Int?
  description String?
  weeklyGoal  Int?
  createdAt   DateTime     @default(now())
  entries     HabitEntry[]
}

model HabitEntry {
  id        Int      @id @default(autoincrement())
  date      DateTime //วันที่ user ใช้บันทึก habit 
  status    Boolean //ทำไม่ทำ
  habit     Habit?   @relation(fields: [habitId], references: [id], onDelete: Cascade)
  habitId   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @db.Timestamp(0)
}
